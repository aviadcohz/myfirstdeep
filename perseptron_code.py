import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import time

def dotProduct(vec1, vec2):
    return sum(vec1val * vec2val for vec1val, vec2val in zip(vec1, vec2))
##    sum(map( operator.mul, vector1, vector2))

def getWeight(xy):
    tryRounds=0
    threshold = 0.5
    learning_rate = 0.1
    #we will initiate the w to be 0 vector, at the same size of X
    w = [0 for x in xrange(len(xy[0][0]))]
    while True:
    ##    print('-' * 60)
        error_count = 0
        for input_vector, desired_output in xy:
    ##        print(w)
    ##        print tryRounds
            tryRounds+=1
            result = dotProduct(input_vector, w) > threshold
            error = desired_output - result
            if error != 0:
                error_count += 1
                for index, value in enumerate(input_vector):
                    w[index] += learning_rate * error * value
        if error_count == 0:
            break
##    print 'it took ',tryRounds,' to find the right w'
##    print ('the weight results are:')
##    print(w)
    return w

def checkResults(w,x,y):
    threshold = 0.5
    result=[]
    rightCount=0
    for sample in x:
        rightWrong = dotProduct(sample, w) > threshold
        result.append(rightWrong)
##    print len(y),len(result)
    for i in range(len(y)):
        if result[i]==y[i]:
            rightCount+=1
##        else:
##            print 'error at line',i
##            printARow(x[i])
##            time.sleep(1)
    print 'we are right with ',100.0*rightCount/len(y),'%'

# a row with 28^2 pixs
def printARow(rowToPrint):
    matplotlib.interactive(True)
    matplotlib.use("TKAgg")
    plt.imshow(rowToPrint.reshape(28,28),cmap="gray");
    plt.draw();

##X = np.loadtxt("train4vs7_data.txt.gz");
##Y = np.loadtxt( "train4vs7_labels.txt.gz");
##X = np.loadtxt("xtry.txt");
##Y = np.loadtxt("ytry.txt");
#no need of bias
X = np.loadtxt("Xtrain.txt");
Y = np.loadtxt("Ytrain.txt");
Y=[0 if x==-1 else x for x in Y]


#no need of bias
##bias=np.ones(len(X))
##xy=np.c_[bias,X]
xy=X
#connecting X and Y to be at the same row, first the X data vector then the Y result
xy = [[xy[i]] + [Y [i]] for i in range(len(xy))]
##print xy
##exit(0)
##xy=[] #this will be x and then a column of y
##for row in range (len(X)):
##    xy.append([X[row]]+[Y[row]])
##print xy
##xy = [[[1, 0, 0], 1], [[1, 0, 1], 1], [[1, 1, 0], 1], [[1, 1, 1], 0]]
##print xy

print ('training the weights, can take about 1 minute')
w=getWeight(xy)
print ('weight are',w)


##w

print ('now we will test our results')
X = np.loadtxt("Xtest.txt");
Y = np.loadtxt("Ytest.txt");
Y=[False if x==-1 else True for x in Y]
checkResults(w,X,Y)
exit(0)
##for watching the w results we can do something like this:
maxi=max(w)
w=(w+maxi)/maxi
printARow(w)

exit(0)









print ('hello')
import numpy as np
##X = np.loadtxt("train4vs7_data.txt.gz");
##Y = np.loadtxt( "train4vs7_labels.txt.gz");
X = np.loadtxt("Xtrain.txt");
Y = np.loadtxt( "Ytrain.txt");
c=1
z=X[1,:]
print z
##exit(0)
a=[z]+[c]
print a
print a[0]
print a[0][0]
print a[1]
exit(0)

##print len(X[0])
##len(Y)
print X[0]

print ('hello2')

import matplotlib
import matplotlib.pyplot as plt
matplotlib.interactive(True)
matplotlib.use("TKAgg")
plt.imshow(X[1,:].reshape(28,28),cmap="gray");
plt.draw();